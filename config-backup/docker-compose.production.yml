# KentKonut Production Docker Compose - Simplified Configuration
# Optimized for host 172.41.42.51 with existing applications
# Security: Database and Redis are internal only

# Use Docker's default bridge network to avoid conflicts
networks:
  default:
    name: kentkonut-prod-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  banner_uploads:
    driver: local

services:
  # PostgreSQL Database - Internal Only (No External Access)
  postgres:
    image: postgres:15-alpine
    container_name: kentkonut-postgres-prod
    environment:
      POSTGRES_DB: kentkonutdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-P@ssw0rd}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Removed init-scripts bind mount to avoid Windows path with spaces issue
      # - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"  # Expose Postgres on host port 5433
    restart: unless-stopped
    # Simplified health check
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis Cache - Internal Only (No External Access)
  redis:
    image: redis:7-alpine
    container_name: kentkonut-redis-prod
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    # NO PORT MAPPING - Internal access only
    restart: unless-stopped
    # Simplified health check
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s

  # KentKonut Backend Service - External Access on Port 3021
  backend:
    build:
      context: ./kentkonut-backend
      dockerfile: Dockerfile
    image: kentkonut-backend:latest
    container_name: kentkonut-backend-prod
    hostname: kentkonut-backend
    environment:
      # Database Configuration - Internal container communication
      - DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD:-P@ssw0rd}@postgres:5432/kentkonutdb

      # Redis Configuration - Internal container communication
      - REDIS_URL=redis://:${REDIS_PASSWORD:-P@ssw0rd}@redis:6379 

      # NextAuth Configuration - Fixed for host IP
      - NEXTAUTH_URL=http://172.41.42.51:3021
      - NEXTAUTH_URL_INTERNAL=http://backend:3021
      - NEXTAUTH_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - AUTH_TRUST_HOST=true

      # Application Configuration
      - NODE_ENV=production
      - PORT=3021
      - HOSTNAME=0.0.0.0
      - API_BASE_URL=http://172.41.42.51:3021
      - NEXT_PUBLIC_API_URL=http://172.41.42.51:3021

      # CORS Configuration - Updated for new frontend port
      - CORS_ALLOWED_ORIGIN=${CORS_ALLOWED_ORIGIN:-http://172.41.42.51:3020,http://localhost:3020,http://172.41.42.51:3021,http://172.41.42.51}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://172.41.42.51:3020,http://localhost:3020}
      - ALLOWED_ORIGINS=http://172.41.42.51:3020,http://localhost:3020

      # JWT Configuration
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - JWT_EXPIRES_IN=7d

      # File Upload Configuration
      - UPLOAD_MAX_SIZE=10485760
      - UPLOAD_ALLOWED_TYPES=image/jpeg,image/png,image/gif,image/webp

      # Email Configuration (optional)
      - SMTP_HOST=${SMTP_HOST:-}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASS=${SMTP_PASS:-}

      # Security
      - BCRYPT_ROUNDS=12
      - RATE_LIMIT_WINDOW=15
      - RATE_LIMIT_MAX=100
    volumes:
      - banner_uploads:/app/public/banners
    ports:
      - "3021:3021"  # External access on port 3021
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    # No explicit health check to avoid startup issues
    networks:
      default:
        aliases:
          - kentkonut-backend
          - backend

  # KentKonut Frontend Service - External Access on Port 3020
  frontend:
    build:
      context: ./kentkonut-frontend
      dockerfile: Dockerfile
    image: kentkonut-frontend:latest
    container_name: kentkonut-frontend-prod
    environment:
      - NODE_ENV=production
      # Frontend API configuration - Points to backend on host IP
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://172.41.42.51:3021}
    ports:
      - "3020:3020"  # External access on port 3020
    depends_on:
      - backend
    restart: unless-stopped
    # No health check to avoid startup issues
